{"ast":null,"code":"// import React, { useState, useEffect } from \"react\";\n\n// function LiveLocation() {\n//   const [location, setLocation] = useState(null);\n//   const [error, setError] = useState(null);\n\n//   useEffect(() => {\n//     if (!navigator.geolocation) {\n//       setError(\"Geolocation is not supported by your browser.\");\n//       return;\n//     }\n\n//     navigator.geolocation.getCurrentPosition(\n//       (position) => {\n//         setLocation({\n//           latitude: position.coords.latitude,\n//           longitude: position.coords.longitude,\n//         });\n//       },\n//       (err) => {\n//         setError(\"Failed to retrieve location: \" + err.message);\n//       }\n//     );\n//   }, []);\n\n//   return (\n//     <div>\n//       <h2>Live Location</h2>\n//       {error ? (\n//         <p style={{ color: \"red\" }}>{error}</p>\n//       ) : location ? (\n//         <p>\n//           üìç Latitude: {location.latitude} <br />\n//           üìç Longitude: {location.longitude}\n//         </p>\n//       ) : (\n//         <p>Fetching location...</p>\n//       )}\n//     </div>\n//   );\n// }\n\n// export default LiveLocation;\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  const locationDisplay = document.getElementById(\"location\");\n  const mapLink = document.getElementById(\"map-link\");\n  function getLiveLocation() {\n    if (\"geolocation\" in navigator) {\n      navigator.geolocation.watchPosition(position => {\n        const latitude = position.coords.latitude;\n        const longitude = position.coords.longitude;\n        console.log(`Latitude: ${latitude}, Longitude: ${longitude}`);\n\n        // Update UI\n        locationDisplay.innerText = `Latitude: ${latitude}, Longitude: ${longitude}`;\n        mapLink.href = `https://www.google.com/maps?q=${latitude},${longitude}`;\n        mapLink.style.display = \"block\"; // Show link\n      }, error => {\n        console.error(\"Error getting location:\", error.message);\n        locationDisplay.innerText = `Error: ${error.message}`;\n      }, {\n        enableHighAccuracy: true,\n        // Get precise location\n        timeout: 5000,\n        // Wait max 5 seconds\n        maximumAge: 0 // Don't use old data\n      });\n    } else {\n      locationDisplay.innerText = \"Geolocation is not supported by your browser.\";\n    }\n  }\n\n  // Call the function on page load\n  getLiveLocation();\n});","map":{"version":3,"names":["document","addEventListener","locationDisplay","getElementById","mapLink","getLiveLocation","navigator","geolocation","watchPosition","position","latitude","coords","longitude","console","log","innerText","href","style","display","error","message","enableHighAccuracy","timeout","maximumAge"],"sources":["C:/Users/HP/OneDrive/Desktop/nirbhayy/frontend/src/components/LiveLocation.js"],"sourcesContent":["// import React, { useState, useEffect } from \"react\";\n\n// function LiveLocation() {\n//   const [location, setLocation] = useState(null);\n//   const [error, setError] = useState(null);\n\n//   useEffect(() => {\n//     if (!navigator.geolocation) {\n//       setError(\"Geolocation is not supported by your browser.\");\n//       return;\n//     }\n\n//     navigator.geolocation.getCurrentPosition(\n//       (position) => {\n//         setLocation({\n//           latitude: position.coords.latitude,\n//           longitude: position.coords.longitude,\n//         });\n//       },\n//       (err) => {\n//         setError(\"Failed to retrieve location: \" + err.message);\n//       }\n//     );\n//   }, []);\n\n//   return (\n//     <div>\n//       <h2>Live Location</h2>\n//       {error ? (\n//         <p style={{ color: \"red\" }}>{error}</p>\n//       ) : location ? (\n//         <p>\n//           üìç Latitude: {location.latitude} <br />\n//           üìç Longitude: {location.longitude}\n//         </p>\n//       ) : (\n//         <p>Fetching location...</p>\n//       )}\n//     </div>\n//   );\n// }\n\n// export default LiveLocation;\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  const locationDisplay = document.getElementById(\"location\");\n  const mapLink = document.getElementById(\"map-link\");\n\n  function getLiveLocation() {\n    if (\"geolocation\" in navigator) {\n      navigator.geolocation.watchPosition(\n        (position) => {\n          const latitude = position.coords.latitude;\n          const longitude = position.coords.longitude;\n          console.log(`Latitude: ${latitude}, Longitude: ${longitude}`);\n\n          // Update UI\n          locationDisplay.innerText = `Latitude: ${latitude}, Longitude: ${longitude}`;\n          mapLink.href = `https://www.google.com/maps?q=${latitude},${longitude}`;\n          mapLink.style.display = \"block\"; // Show link\n        },\n        (error) => {\n          console.error(\"Error getting location:\", error.message);\n          locationDisplay.innerText = `Error: ${error.message}`;\n        },\n        {\n          enableHighAccuracy: true, // Get precise location\n          timeout: 5000, // Wait max 5 seconds\n          maximumAge: 0, // Don't use old data\n        }\n      );\n    } else {\n      locationDisplay.innerText = \"Geolocation is not supported by your browser.\";\n    }\n  }\n\n  // Call the function on page load\n  getLiveLocation();\n});\n"],"mappings":"AAAA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACAA,QAAQ,CAACC,gBAAgB,CAAC,kBAAkB,EAAE,MAAM;EAClD,MAAMC,eAAe,GAAGF,QAAQ,CAACG,cAAc,CAAC,UAAU,CAAC;EAC3D,MAAMC,OAAO,GAAGJ,QAAQ,CAACG,cAAc,CAAC,UAAU,CAAC;EAEnD,SAASE,eAAeA,CAAA,EAAG;IACzB,IAAI,aAAa,IAAIC,SAAS,EAAE;MAC9BA,SAAS,CAACC,WAAW,CAACC,aAAa,CAChCC,QAAQ,IAAK;QACZ,MAAMC,QAAQ,GAAGD,QAAQ,CAACE,MAAM,CAACD,QAAQ;QACzC,MAAME,SAAS,GAAGH,QAAQ,CAACE,MAAM,CAACC,SAAS;QAC3CC,OAAO,CAACC,GAAG,CAAC,aAAaJ,QAAQ,gBAAgBE,SAAS,EAAE,CAAC;;QAE7D;QACAV,eAAe,CAACa,SAAS,GAAG,aAAaL,QAAQ,gBAAgBE,SAAS,EAAE;QAC5ER,OAAO,CAACY,IAAI,GAAG,iCAAiCN,QAAQ,IAAIE,SAAS,EAAE;QACvER,OAAO,CAACa,KAAK,CAACC,OAAO,GAAG,OAAO,CAAC,CAAC;MACnC,CAAC,EACAC,KAAK,IAAK;QACTN,OAAO,CAACM,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAACC,OAAO,CAAC;QACvDlB,eAAe,CAACa,SAAS,GAAG,UAAUI,KAAK,CAACC,OAAO,EAAE;MACvD,CAAC,EACD;QACEC,kBAAkB,EAAE,IAAI;QAAE;QAC1BC,OAAO,EAAE,IAAI;QAAE;QACfC,UAAU,EAAE,CAAC,CAAE;MACjB,CACF,CAAC;IACH,CAAC,MAAM;MACLrB,eAAe,CAACa,SAAS,GAAG,+CAA+C;IAC7E;EACF;;EAEA;EACAV,eAAe,CAAC,CAAC;AACnB,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}