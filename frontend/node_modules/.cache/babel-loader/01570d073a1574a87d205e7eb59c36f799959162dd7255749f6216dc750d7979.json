{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\OneDrive\\\\Desktop\\\\nirbhayy\\\\frontend\\\\src\\\\components\\\\Contacts.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"../styles/Contacts.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Contacts() {\n  _s();\n  const [contacts, setContacts] = useState([{\n    name: \"Police\",\n    number: \" 100 \",\n    isPinned: true\n  }, {\n    name: \"Ambulance\",\n    number: \" 102 \",\n    isPinned: true\n  }, {\n    name: \"Women Helpline\",\n    number: \" 1091\",\n    isPinned: true\n  }, {\n    name: \"Family Member\",\n    number: \"123-456-7890\",\n    isPinned: false\n  }]);\n  const [newContactName, setNewContactName] = useState(\"\");\n  const [newContactNumber, setNewContactNumber] = useState(\"\");\n  const addContact = () => {\n    if (newContactName && newContactNumber) {\n      setContacts([...contacts, {\n        name: newContactName,\n        number: newContactNumber,\n        isPinned: false\n      }]);\n      setNewContactName(\"\");\n      setNewContactNumber(\"\");\n    }\n  };\n  const togglePin = index => {\n    const updatedContacts = [...contacts];\n    updatedContacts[index].isPinned = !updatedContacts[index].isPinned;\n    setContacts(updatedContacts);\n  };\n  const deleteContact = index => {\n    const updatedContacts = contacts.filter((_, i) => i !== index);\n    setContacts(updatedContacts);\n  };\n\n  // Sort contacts: pinned first, then alphabetically\n  const sortedContacts = [...contacts].sort((a, b) => {\n    if (a.isPinned && !b.isPinned) return -1;\n    if (!a.isPinned && b.isPinned) return 1;\n    return a.name.localeCompare(b.name);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"contacts-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Emergency Contacts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card add-contact-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Add New Contact\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex gap-10\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"input-field\",\n          placeholder: \"Contact Name\",\n          value: newContactName,\n          onChange: e => setNewContactName(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"input-field\",\n          placeholder: \"Phone Number\",\n          value: newContactNumber,\n          onChange: e => setNewContactNumber(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"contact-form-actions\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: addContact,\n          className: \"btn btn-primary\",\n          children: \"Add Contact\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: sortedContacts.map((contact, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"contact-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"contact-icon\",\n            children: contact.name.charAt(0)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"contact-details\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"contact-label\",\n              children: contact.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"contact-number\",\n              children: contact.number\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"contact-actions\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => togglePin(index),\n            children: contact.isPinned ? /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"pin-icon\",\n              children: \"\\uD83D\\uDCCC\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"\\uD83D\\uDCCC\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 15\n          }, this), !contact.isPinned && /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => deleteContact(index),\n            children: \"\\uD83D\\uDDD1\\uFE0F\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n_s(Contacts, \"vUqtx1ZKb7Izvn2MTJtP7+QsNDY=\");\n_c = Contacts;\nexport default Contacts;\nvar _c;\n$RefreshReg$(_c, \"Contacts\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Contacts","_s","contacts","setContacts","name","number","isPinned","newContactName","setNewContactName","newContactNumber","setNewContactNumber","addContact","togglePin","index","updatedContacts","deleteContact","filter","_","i","sortedContacts","sort","a","b","localeCompare","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","map","contact","charAt","_c","$RefreshReg$"],"sources":["C:/Users/HP/OneDrive/Desktop/nirbhayy/frontend/src/components/Contacts.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport \"../styles/Contacts.css\";\n\nfunction Contacts() {\n  const [contacts, setContacts] = useState([\n    { name: \"Police\", number: \" 100 \", isPinned: true },\n    { name: \"Ambulance\", number: \" 102 \", isPinned: true },\n    { name: \"Women Helpline\", number: \" 1091\", isPinned: true },\n    { name: \"Family Member\", number: \"123-456-7890\", isPinned: false }\n  ]);\n\n  const [newContactName, setNewContactName] = useState(\"\");\n  const [newContactNumber, setNewContactNumber] = useState(\"\");\n\n  const addContact = () => {\n    if (newContactName && newContactNumber) {\n      setContacts([\n        ...contacts,\n        { \n          name: newContactName, \n          number: newContactNumber, \n          isPinned: false \n        }\n      ]);\n      setNewContactName(\"\");\n      setNewContactNumber(\"\");\n    }\n  };\n\n  const togglePin = (index) => {\n    const updatedContacts = [...contacts];\n    updatedContacts[index].isPinned = !updatedContacts[index].isPinned;\n    setContacts(updatedContacts);\n  };\n\n  const deleteContact = (index) => {\n    const updatedContacts = contacts.filter((_, i) => i !== index);\n    setContacts(updatedContacts);\n  };\n\n  // Sort contacts: pinned first, then alphabetically\n  const sortedContacts = [...contacts].sort((a, b) => {\n    if (a.isPinned && !b.isPinned) return -1;\n    if (!a.isPinned && b.isPinned) return 1;\n    return a.name.localeCompare(b.name);\n  });\n\n  return (\n    <div className=\"contacts-container\">\n      <h2>Emergency Contacts</h2>\n      \n      <div className=\"card add-contact-form\">\n        <h3>Add New Contact</h3>\n        <div className=\"flex gap-10\">\n          <input \n            type=\"text\" \n            className=\"input-field\" \n            placeholder=\"Contact Name\" \n            value={newContactName}\n            onChange={(e) => setNewContactName(e.target.value)}\n          />\n          <input \n            type=\"text\" \n            className=\"input-field\" \n            placeholder=\"Phone Number\" \n            value={newContactNumber}\n            onChange={(e) => setNewContactNumber(e.target.value)}\n          />\n        </div>\n        <div className=\"contact-form-actions\">\n          <button onClick={addContact} className=\"btn btn-primary\">\n            Add Contact\n          </button>\n        </div>\n      </div>\n      \n      <ul>\n        {sortedContacts.map((contact, index) => (\n          <li key={index}>\n            <div className=\"contact-info\">\n              <div className=\"contact-icon\">\n                {contact.name.charAt(0)}\n              </div>\n              <div className=\"contact-details\">\n                <span className=\"contact-label\">{contact.name}</span>\n                <span className=\"contact-number\">{contact.number}</span>\n              </div>\n            </div>\n            <div className=\"contact-actions\">\n              <button onClick={() => togglePin(index)}>\n                {contact.isPinned ? (\n                  <span className=\"pin-icon\">📌</span>\n                ) : (\n                  <span>📌</span>\n                )}\n              </button>\n              {!contact.isPinned && (\n                <button onClick={() => deleteContact(index)}>\n                  🗑️\n                </button>\n              )}\n            </div>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nexport default Contacts;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}